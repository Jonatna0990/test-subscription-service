basePath: /
definitions:
  dto.ErrorResponse:
    properties:
      fields:
        additionalProperties:
          type: string
        type: object
      message:
        example: request error
        type: string
    type: object
  dto.GetSubscriptionFilterListRequest:
    properties:
      endDate:
        type: string
      serviceName:
        type: string
      startDate:
        type: string
      userID:
        type: string
    required:
    - endDate
    - startDate
    type: object
  dto.GetSubscriptionFilterListResponse:
    properties:
      end_date:
        type: string
      start_date:
        type: string
      total_cost:
        type: integer
    type: object
  dto.SubscriptionRequest:
    properties:
      end_date:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
    required:
    - price
    - service_name
    - start_date
    type: object
  dto.SubscriptionResponse:
    properties:
      end_date:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  dto.SuccessResponse:
    properties:
      message:
        example: request success
        type: string
    type: object
host: localhost:3001
info:
  contact: {}
  description: This is a sample swagger for subscription service API
  title: Subscription Service API
  version: "1.0"
paths:
  /subscriptions:
    get:
      description: Возвращает список всех подписок
      produces:
      - application/json
      responses:
        "200":
          description: Список подписок
          schema:
            items:
              $ref: '#/definitions/dto.SubscriptionResponse'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Получить все подписки
      tags:
      - Подписки
    post:
      consumes:
      - application/json
      description: Создаёт новую подписку
      parameters:
      - description: Данные подписки
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Создано
          schema:
            $ref: '#/definitions/dto.SuccessResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "502":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Создать подписку
      tags:
      - Подписки
    put:
      consumes:
      - application/json
      description: Обновляет данные существующей подписки
      parameters:
      - description: Обновлённые данные подписки
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Обновлено
          schema:
            $ref: '#/definitions/dto.SuccessResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Не найдена подписка
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Обновить подписку
      tags:
      - Подписки
  /subscriptions/{id}:
    delete:
      description: Удаляет подписку по её ID
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Удалено
          schema:
            $ref: '#/definitions/dto.SuccessResponse'
        "404":
          description: Не найдено
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Удалить подписку
      tags:
      - Подписки
    get:
      description: Возвращает подписку по её идентификатору
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Найденная подписка
          schema:
            $ref: '#/definitions/dto.SubscriptionResponse'
        "400":
          description: Неправильный uuid
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Не найдено
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Получить подписку по ID
      tags:
      - Подписки
  /subscriptions/summary:
    get:
      consumes:
      - application/json
      description: Возвращает сумму всех подписок, соответствующих фильтру
      parameters:
      - description: Фильтр для подсчёта
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GetSubscriptionFilterListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Результат подсчёта
          schema:
            $ref: '#/definitions/dto.GetSubscriptionFilterListResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Подсчитать сумму подписок
      tags:
      - Подписки
schemes:
- http
swagger: "2.0"
